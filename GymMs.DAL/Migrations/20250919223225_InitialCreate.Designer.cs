// <auto-generated />
using System;
using GymMs.DAL.GymMs.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GymMs.DAL.Migrations
{
    [DbContext(typeof(GymDbContext))]
    [Migration("20250919223225_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GymMs.DAL.GymMs.DAL.Entities.GymClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TrainerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TrainerId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("GymMs.DAL.GymMs.DAL.Entities.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SubscriptionEnd")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Islam@gmail.com",
                            FullName = "Islam Ayman",
                            JoinDate = new DateTime(2025, 7, 20, 1, 32, 23, 330, DateTimeKind.Local).AddTicks(2850),
                            SubscriptionEnd = new DateTime(2025, 10, 20, 1, 32, 23, 330, DateTimeKind.Local).AddTicks(2889)
                        },
                        new
                        {
                            Id = 2,
                            Email = "Ahmed@hotmail.com",
                            FullName = "Ahmed Ayman",
                            JoinDate = new DateTime(2025, 4, 20, 1, 32, 23, 330, DateTimeKind.Local).AddTicks(2892),
                            SubscriptionEnd = new DateTime(2025, 9, 17, 1, 32, 23, 330, DateTimeKind.Local).AddTicks(2895)
                        });
                });

            modelBuilder.Entity("GymMs.DAL.GymMs.DAL.Entities.MemberClass", b =>
                {
                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("GymClassId")
                        .HasColumnType("int");

                    b.HasKey("MemberId", "GymClassId");

                    b.HasIndex("GymClassId");

                    b.ToTable("MemberClasses");
                });

            modelBuilder.Entity("GymMs.DAL.GymMs.DAL.Entities.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SubscriptionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("GymMs.DAL.GymMs.DAL.Entities.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("GymMs.DAL.GymMs.DAL.Entities.Trainer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Specialty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Trainers");
                });

            modelBuilder.Entity("GymMs.DAL.GymMs.DAL.Entities.GymClass", b =>
                {
                    b.HasOne("GymMs.DAL.GymMs.DAL.Entities.Trainer", "Trainer")
                        .WithMany("Classes")
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("GymMs.DAL.GymMs.DAL.Entities.MemberClass", b =>
                {
                    b.HasOne("GymMs.DAL.GymMs.DAL.Entities.GymClass", "GymClass")
                        .WithMany("MemberClasses")
                        .HasForeignKey("GymClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymMs.DAL.GymMs.DAL.Entities.Member", "Member")
                        .WithMany("MemberClasses")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GymClass");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("GymMs.DAL.GymMs.DAL.Entities.Payment", b =>
                {
                    b.HasOne("GymMs.DAL.GymMs.DAL.Entities.Subscription", "Subscription")
                        .WithMany("Payments")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("GymMs.DAL.GymMs.DAL.Entities.Subscription", b =>
                {
                    b.HasOne("GymMs.DAL.GymMs.DAL.Entities.Member", "Member")
                        .WithMany("Subscriptions")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("GymMs.DAL.GymMs.DAL.Entities.GymClass", b =>
                {
                    b.Navigation("MemberClasses");
                });

            modelBuilder.Entity("GymMs.DAL.GymMs.DAL.Entities.Member", b =>
                {
                    b.Navigation("MemberClasses");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("GymMs.DAL.GymMs.DAL.Entities.Subscription", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("GymMs.DAL.GymMs.DAL.Entities.Trainer", b =>
                {
                    b.Navigation("Classes");
                });
#pragma warning restore 612, 618
        }
    }
}
